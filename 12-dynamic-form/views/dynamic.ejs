<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>동적 폼 전송</title>
  <script   
    src="https://code.jquery.com/jquery-3.7.0.min.js" 
    integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" 
    crossorigin="anonymous">
  </script>
</head>
<body>
  <h1>Dynamic EJS</h1>
  <span><%= obj.PORT %>에서 응답하고 있습니다.</span>
  <br>
  <img src="<%= obj.image %>" alt="cafe">
  <!-- 이름 성별 라디오 정보를 입력 받는 폼 -->
  <form method="post" name="register" style="height: 30vh; display: flex; flex-direction: column; justify-content: space-around;" >
    <div>
      <label for="name">이름 : </label>
      <input type="text" name="name" id="name" value="1">
    </div>
    <div>
      <span>성별 : </span>
      <input type="radio" value="m" id="m" name="gender" checked>
      <label for="m">남자</label>
      <input type="radio" value="f" id="f" name="gender">
      <label for="f">여자</label>
    </div>
    <div>
      <button type="button" onclick="ajax('get')">get 제출</button>
      <button type="button" onclick="ajax('post')">post 제출</button>
    </div>
  </form>
  <!-- 전송 결과를 보여주는 곳 -->
  <div class="result">

  </div>
  <script>
    function ajaxGet() {
      // console.log("ajax get")
      const form = document.forms["register"]
      // console.log(form)
      // console.dir()은 사용자 지정 js 객체나 복잡한 DOM 요소를 파악하는 데 사용된다.
      // console.dir(form)
      // input 태그는 밸류를 속성으로 가지고 있어 가지고 있는 속성값을 가지고 올 수 있다.
      // console.dir(form.name) 
      // console.dir(form.gender)
      const name = form.name.value
      const gender = form.gender.value
      const data = {
        "name" : name, "gender" : gender
      }
      // Ajax에 Get 요청 보내기
      $.ajax({
        type : "get",
        url: "/ajax",
        data : data, 
        success : function(data) { 
          // 통신이 성공하였을 경우 서버에서 리턴값을 받을 수 있음
          const result = document.getElementsByClassName("result")
          // const nameSpan = document.createElement("span")
          // nameSpan.innerText = data.name
          // const genderSpan = document.createElement("span")
          // genderSpan.innerText = data.gender  == "m" ? "남자" : "여자"
          result[0].innerText = `이름은 ${data.name}이시고 성별은 ${data.gender}`
        }
      })
    }
    function ajaxPost() {
      console.log("ajax post")
    }
    // 하나의 함수로 헬퍼 함수를 이용하여 정리
    function ajax(methodType) {
      const form = document.forms["register"]
      const name = form.name.value
      const gender = form.gender.value
      const data = {
        "name" : name, "gender" : gender
      }
      const action = {
        get : function () {
          $.ajax({
            type : "get", // 요청의 종류
            url: "/ajax", // 요청 경로
            data : data,  // 전송 데이터
            success : function(data) {  // 요청 성공시 수행할 함수
              const result = document.getElementsByClassName("result")
              result[0].innerText = `GET 요청 완료 이름은 ${data.name}이시고 성별은 ${data.gender}`
              // const result = document.querySelector(".result")
              // const nameSpan = document.createElement("span")
              // nameSpan.innerText = data.name
              // const genderSpan = document.createElement("span")
              // genderSpan.innerText = data.gender
              // result.append(nameSpan, genderSpan)
            }
          })
        },
        post : function() {
          $.ajax({
            type : "post",
            url: "/ajax",
            data : data, 
            success : function(data) { 
              const result = document.getElementsByClassName("result")
              result[0].innerText = `POST 요청 완료 이름은 ${data.name}이시고 성별은 ${data.gender}`
            }
          })
        }
      }
      action[methodType]()
    }
  </script>
</body>

</html>